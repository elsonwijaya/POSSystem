plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.26.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

wrapper {
    gradleVersion = '7.4.2'
    distributionType = Wrapper.DistributionType.BIN
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'javafx.MainApp'
    mainModule = 'org.example.posystem'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

dependencies {
    implementation "org.openjfx:javafx-controls:${javafx.version}"
    implementation "org.openjfx:javafx-fxml:${javafx.version}"
    implementation "org.openjfx:javafx-graphics:${javafx.version}"  // Added graphics explicitly
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    testImplementation platform("org.junit:junit-bom:${junitVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'com.github.anastaciocintra:escpos-coffee:4.1.0'  // Add this for thermal printer support
}

task copyResources(type: Copy) {
    from 'src/main/resources'
    into "${buildDir}/resources/main"
    include '**/*.fxml'
    include '**/*.css'
    include '**/db/**'
    include '**/app_database.db'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'POSSystem'
        noConsole = false
        jvmArgs = [
                '--add-opens', 'java.base/java.nio.file=org.example.posystem',
                '--add-opens', 'java.base/java.sql=org.example.posystem',
                '-Dfile.encoding=UTF-8',
                '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                '--add-opens', 'java.base/java.io=ALL-UNNAMED',
                '--add-opens', 'java.base/java.util=ALL-UNNAMED',
                '--add-opens', 'java.base/java.net=ALL-UNNAMED'
        ]
    }

    forceMerge('sqlite')
    forceMerge('escpos-coffee')
    addOptions('--verbose')

    jpackage {
        appVersion = '1.0.0'
        outputDir = "installers"
        imageName = "POSSystem"
        skipInstaller = false
        installerName = 'POSSystem'

        // Detect the operating system and apply appropriate options
        def os = System.getProperty('os.name').toLowerCase()
        if (os.contains('windows')) {
            installerType = 'exe'
            installerOptions = [
                    '--vendor', 'Your Company Name',
                    '--win-menu',
                    '--win-dir-chooser',
                    '--win-shortcut',
                    '--win-per-user-install',
                    '--win-menu-group', 'POSSystem',
                    '--description', 'POS System Application',
                    '--verbose'
            ]
        } else if (os.contains('linux')) {
            installerType = 'deb'  // or 'rpm' depending on your Linux distribution
            installerOptions = [
                    '--vendor', 'Your Company Name',
                    '--linux-menu-group', 'POSSystem',
                    '--linux-shortcut',
                    '--description', 'POS System Application',
                    '--verbose'
            ]
        } else if (os.contains('mac')) {
            installerType = 'pkg'
            installerOptions = [
                    '--vendor', 'Your Company Name',
                    '--mac-package-identifier', 'com.yourcompany.possystem',
                    '--mac-package-name', 'POSSystem',
                    '--description', 'POS System Application',
                    '--verbose'
            ]
        }

        // Ensure all resources are included
        resourceDir = file("src/main/resources")
    }
}

tasks.named('processResources').configure {
    dependsOn copyResources
}

test {
    useJUnitPlatform()
}